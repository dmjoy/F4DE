Date: 2012/12/12

This file contains instructions on how to set and use the "SubmissionHelper.sh" script



--Note:
--------

- lines starting by % are command lines

- command lines with <TEXT> are to be adapted to your specific "TEXT" values


--Obtaining a scp account:
-------------

0) If not familiar with SSH, please see: http://www.wikihow.com/Use-SSH

1) decide on the user name of your team; it must follow the pattern
"kws-<TEAM>[_<SITE>]" (<TEAM> or <SITE> can not contain - or _)

2) ensure you have a valid SSH Protocol 2 (using '% ssh_keygen -t dsa'
or '% ssh_keygen -t rsa') public key file (with a non empty passphrase
of 12 or more characters), as you will need it to provide it to NIST
for account creation purpose

3) email 'indus@nist.gov' with:
- your user, site and team names
- the list of users expected to use the service with contact information (email + phone)
- attach to the email the public keys for the given user (do not inline its text)
- provide us with a list of the IP subnet that will need access to the ssh server

4) you should receive an email from NIST with a confirmation or
request for clarification related to the creation of the account that
will contain testing instructions.

5) test to confirm you can upload and download a file according to the
instructions in the email your received from step 4

Please remember that access to the system is done via 'scp' using public key +
passphrase only.


--Prerequisite:
-------------

- make sure that at least F4DE's "make mincheck" and "make
KWSEvalcheck" complete succesfully ('make' commands are run from the
base F4DE's directory)

- you must have a functional scp command with an associated account
(with a passphrase) on the scoring transfer system. We strongly
recommend that an 'ssh-agent' be in place to faciliate data transfer,
as every communication with the scoring server is done via 'scp'
(including status checks).  For details on 'ssh-agent', please refer
to your 'man ssh-agent' as well as
https://en.wikipedia.org/wiki/Ssh-agent

- require "JobRunner.pl" (should have been made available to you as a
separate download)

- a copy of the cumulative release of scoring software driver files
for Babel KWS and STT evaluations (for future reference we will call
it 'IndusDB')

- (for scoring your own STT input files) require the 'sctk' tool installed
(at least version 2.4.4).  See:
http://www.nist.gov/itl/iad/mig/tools.cfm

- an understanding of the EXPID composition from the BABEL Evaluation
Plan

- the matching KWSEval system input files (ECF and Keyword List files)
to the EXPID you are submitting



--Configuration Steps:
-------------------

In order to be able to use the tool (SubmissionHelper.sh), its
configuration file (SubmissionHelper.cfg) must be created.

For BABEL 2012, the simplest way to do so is to copy
SubmissionHelper_BABEL12.cfg to SubmissionHelper.cfg, 
and edit the configuration file (SubmissionHelper.cfg)'s 
'scp_user' line to reflect your scoring transfer system 
account information.

% cp SubmissionHelper_BABEL12.cfg SubmissionHelper.cfg

For BABEL 2012, the file to copy is called:  SubmissionHelper_BABEL13.cfg

The default configuration files are designed to make everything work
from the current directory, 'JobRunner.pl', 
and the 'bin' directory for the SCTK installation.
For this to happen, please make symbolic link to your installation
location of the tools to the current directory:

% ln -s <JOBRUNNER_DIRECTORY>/JobRunner.pl

% ln -s <SCTK_INSTALL_BIN_DIRECTORY> sctkbin

Make the local copy of your 'IndusDB' available as the
SubmissionHelper's 'dbDir':

% ln -s <INDUSDB_DIR> dbDir


Familiarize yourself with the list of options of the tool by running
it without any option:

% ./SubmissionHelper.sh

Confirm that the "SubmissionHelper.sh" tool is functional by
calling it from the current directory with a invalid file (such as
this README), which should fail, but will confirm that the expected
entries from the configuration file (SubmissionHelper.cfg) are
presumed valid:

% ./SubmissionHelper.sh README

This should fail due a validation error.

From within the 'dbDir' are some samples that can be used for testing
your setup; for example:


% ./SubmissionHelper.sh dbDir/samples/KWS12_NIST_babel101b-v0.4c-DryRunEval-v3_conv-eval_BaEval_PI-KWS_FullLP_p-word-m10xf20_1.kwslist.xml

should prompt a submission log similar to:

** Submission file: [dbDir/samples/KWS12_NIST_babel101b-v0.4c-DryRunEval-v3_conv-eval_BaEval_PI-KWS_FullLP_p-word-m10xf20_1.kwslist.xml]
   SHA256 : 4043be376e0e8060d54c6f53673e53da8d4d25ef46db98befaa237a8551a72a7
++ Validation step
  -> validating submission file
++ Archive Generation and Upload
  -> transfer file
++ Awaiting scoring server completion
Remote Server: Awaiting Status update from scoring server
Remote Server: Scoring
Remote Server: Report Uploaded
++ Downloading Results
  <- Trying to download result file
** Result file: /Users/martial/Works/F4DE/KWSEval/BABEL-ssh/Participants/_downloads/27da546477cfac992756ff66346fb9c03190616a21187325e8112222c4530d90.tar.bz2
** Uncompressed in: /Users/martial/Works/F4DE/KWSEval/BABEL-ssh/Participants/Results/KWS12_NIST_babel101b-v0.4c-DryRunEval-v3_conv-eval_BaEval_PI-KWS_FullLP_p-word-m10xf20_1

(this may take a few minutes to complete)

NOTE: the first time any 'scp' is done with the Scoring Server, you
might be prompted for accepting the SSH key of the remote host, please
enter 'yes'.


-- Submiting an EXPID:
-------------------

Running "SubmissionHelper.sh" without any option will display its
usage entry.

Simply run the "SubmissionHelper.sh" tool (from the current location)
with a valid EXPID submission, and follow the step by step description
of the processing:

% ./SubmissionHelper.sh <EXPID>.kwslist.xml
  or
% ./SubmissionHelper.sh <EXPID>.ctm

Note: It is possible to interrupt the process and restart it at a
later time by running the same command line with the exact same
"<EXPID>.kwslist.xml" (or "<EXPID>.ctm") file
