.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DEVA_CLI 1"
.TH DEVA_CLI 1 "2016-02-12" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
DEVA_cli \- Detection EVAluation Scorer Command Line Interface
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBDEVA_cli\fR 
  [\fB\-\-help\fR\ |\ \fB\-\-man\fR\ |\ \fB\-\-version\fR]
  \fB\-\-outdir\fR\ \fIdir\fR
  [\fB\-\-profile\fR\ \fIname\fR\ [\fB\-\-KsaveProfile\fR]]
  [\fB\-\-configSkip\fR]\ [\fB\-\-CreateDBSkip\fR]\ [\fB\-\-filterSkip\fR]\ [\fB\-\-DETScoreSkip\fR]
  [\fB\-\-refcsv\fR\ \fIcsvfile\fR]
  [\fB\-\-syscsv\fR\ \fIcsvfile\fR\ \ [\fB\-\-KqSys\fR\ \fIfile\fR]\ [\fB\-\-KwSys\fR\ \fIfile\fR]
  \ |\ \fB\-\-derivedSys\fR\ \fIjoin.sql\fR\ \fB\-\-syscsv\fR\ \fIcsvfile\fR[\fI:tablename\fR][\fI\f(CI%columnname:constraint\fI\fR[...]]
  \ \ \ [\fB\-\-syscsv\fR\ \fIcsvfile\fR[...]\ [...]]
  \ \ \ [\fB\-\-KexactlyXderivedSys\fR\ \fInumber\fR]\ [\fB\-\-KQderivedSys\fR\ \fIfile\fR]\ [\fB\-\-KWderivedSys\fR\ \fIfile\fR]\ ] 
  [\fB\-\-KSysConstraints\fR\ \fIfile\fR]\ [\fB\-\-KMDConstraints\fR\ \fIfile\fR]
  [\fB\-\-quickConfig\fR\ [\fIlinecount\fR]]\ [\fB\-\-NULLfields\fR]
  [\fB\-\-wREFcfg\fR\ \fIfile\fR]\ [\fB\-\-WSYScfg\fR\ \fIfile\fR]\ [\fB\-\-VMDcfg\fR\ \fIfile\fR]
  [\fB\-\-RefDBfile\fR\ \fIfile\fR]\ [\fB\-\-SysDBfile\fR\ \fIfile\fR]
  [\fB\-\-MetadataDBfile\fR\ \fIfile\fR]\ [\fB\-\-iFilterDBfile\fR\ \fIfile\fR]
  [\fB\-\-FilterCMDfile\fR\ \fISQLite_commands_file\fR] 
  [\fB\-\-PrintedBlock\fR\ \fItext\fR]
  [\fB\-\-AdditionalFilterDB\fR\ \fIfile:name\fR\ [\fB\-\-AdditionalFilterDB\fR\ \fIfile:name\fR\ [...]]]
  [\fB\-\-GetTrialsDB\fR]
  [\fB\-\-usedMetric\fR\ \fIpackage\fR]
  [\fB\-\-UsedMetricParameters\fR\ \fIparameter=value\fR\ [\fB\-\-UsedMetricParameters\fR\ \fIparameter=value\fR\ [...]]]
  [\fB\-\-TrialsParameters\fR\ \fIparameter=value\fR\ [\fB\-\-TrialsParameters\fR\ \fIparameter=value\fR\ [...]]]
  [\fB\-\-listParameters\fR]
  [\fB\-\-blockName\fR\ \fIname\fR]\ [\fB\-\-taskName\fR\ \fIname\fR]
  [\fB\-\-xmin\fR\ \fIval\fR]\ [\fB\-\-Xmax\fR\ \fIval\fR]\ [\fB\-\-ymin\fR\ \fIval\fR]\ [\fB\-\-Ymax\fR\ \fIval\fR]
  [\fB\-\-zusedXscale\fR\ \fIset\fR]\ [\fB\-\-ZusedYscale\fR\ \fIset\fR]
  [\fB\-\-BlockAverage\fR]
  [\fB\-\-additionalResDBfile\fR\ \fIfile\fR\ [\fB\-\-additionalResDBfile\fR\ \fIfile\fR\ [...]]]
  [\fB\-\-judgementThreshold\fR\ \fIscore\fR\ |\ \fB\-\-JudgementThresholdPerBlock\fR\ \fIsql_file\fR]
  [\fIcsvfile\fR[\fI:tablename\fR][\fI\f(CI%columnname:constraint\fI\fR[...]]\ [\fIcsvfile\fR[...]\ [...]]]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBDEVA_cli\fR is the main wrapper script for the Detection EVAluation
(\s-1DEVA\s0) tool set.  The \s-1DEVA\s0 tools are designed to score the output of a
binary detection system using a variety of evaluation metrics.  The tool set reads a set of comma
separated value (\s-1CSV\s0) input data files and then uses a SQLite database backend to
select what to score.
.PP
The wrapper performs four steps to complete this scoring process.
The \s-1USAGE\s0 section describes the process with an example.
.IP "Step 1: Scheme configuration generation" 4
.IX Item "Step 1: Scheme configuration generation"
Required arguments:
 \fB\-\-outdir\fR\ \fIdir\fR
.Sp
Optional arguments:
 [\fB\-\-profile\fR\ \fIname\fR\ [\fB\-\-KsaveProfile\fR]]
 [\fB\-\-quickConfig\fR\ [\fIlinecount\fR]]
 [\fB\-\-NULLfields\fR]
 [\fB\-\-refcsv\fR\ \fIcsvfile\fR]
 [\fB\-\-syscsv\fR\ \fIcsvfile\fR\ \ [\fB\-\-KqSys\fR\ \fIfile\fR]\ [\fB\-\-KwSys\fR\ \fIfile\fR]
 \ |\ \fB\-\-derivedSys\fR\ \fIjoin.sql\fR\ \fB\-\-syscsv\fR\ \fIcsvfile\fR[\fI:tablename\fR][\fI\f(CI%columnname:constraint\fI\fR[...]]
 \ \ \ [\fB\-\-syscsv\fR\ \fIcsvfile\fR[...]\ [...]]
 \ \ \ [\fB\-\-KexactlyXderivedSys\fR\ \fInumber\fR]\ [\fB\-\-KQderivedSys\fR\ \fIfile\fR]\ [\fB\-\-KWderivedSys\fR\ \fIfile\fR]\ ] 
 [\fB\-\-KSysConstraints\fR\ \fIfile\fR]\ [\fB\-\-KMDConstraints\fR\ \fIfile\fR]
 [\fB\-\-wREFcfg\fR\ \fIfile\fR]
 [\fB\-\-WSYScfg\fR\ \fIfile\fR]
 [\fB\-\-VMDcfg\fR\ \fIfile\fR]
 [\fIcsvfile\fR[...]\ [\fIcsvfile\fR[...]\ [...]]]
.Sp
Bypass step:
 [\fB\-\-configSkip\fR]
.IP "Step 2: \s-1SQL\s0 table creation and populating" 4
.IX Item "Step 2: SQL table creation and populating"
Required arguments:
 \fB\-\-outdir\fR\ \fIdir\fR
.Sp
Optional arguments:
 [\fB\-\-profile\fR\ \fIname\fR\ [\fB\-\-KsaveProfile\fR]]
 [\fB\-\-NULLfields\fR]
 [\fB\-\-derivedSys\fR\ \fIjoin.sql\fR]
 [\fB\-\-wREFcfg\fR\ \fIfile\fR]
 [\fB\-\-WSYScfg\fR\ \fIfile\fR]
 [\fB\-\-VMDcfg\fR\ \fIfile\fR]
 [\fB\-\-RefDBfile\fR\ \fIfile\fR]
 [\fB\-\-SysDBfile\fR\ \fIfile\fR]
 [\fB\-\-MetadataDBfile\fR\ \fIfile\fR]
.Sp
Bypass step: 
 [\fB\-\-CreateDBSkip\fR]
.IP "Step 3: \s-1SQL\s0 Filtering" 4
.IX Item "Step 3: SQL Filtering"
Required arguments:
 \fB\-\-outdir\fR\ \fIdir\fR
.Sp
Optional arguments:
 [\fB\-\-profile\fR\ \fIname\fR\ [\fB\-\-KsaveProfile\fR]]
 [\fB\-\-RefDBfile\fR\ \fIfile\fR]
 [\fB\-\-SysDBfile\fR\ \fIfile\fR]
 [\fB\-\-MetadataDBfile\fR\ \fIfile\fR]
 [\fB\-\-iFilterDBfile\fR\ \fIfile\fR]
 [\fB\-\-FilterCMDfile\fR\ \fISQLite_commands_file\fR]
 [\fB\-\-PrintedBlock\fR\ \fItext\fR]
 [\fB\-\-AdditionalFilterDB\fR\ \fIfile:name\fR\ [\fB\-\-AdditionalFilterDB\fR\ \fIfile:name\fR\ [...]]]
.Sp
Bypass step: 
 [\fB\-\-filterSkip\fR]
.IP "Step 4: Scoring with DETCurve generation" 4
.IX Item "Step 4: Scoring with DETCurve generation"
Required arguments:
 \fB\-\-outdir\fR\ \fIdir\fR
.Sp
Optional arguments:
 [\fB\-\-profile\fR\ \fIname\fR\ [\fB\-\-KsaveProfile\fR]]
 [\fB\-\-RefDBfile\fR\ \fIfile\fR]
 [\fB\-\-SysDBfile\fR\ \fIfile\fR]
 [\fB\-\-iFilterDBfile\fR\ \fIfile\fR]
 [\fB\-\-GetTrialsDB\fR]
 [\fB\-\-usedMetric\fR\ \fIpackage\fR]
 [\fB\-\-UsedMetricParameters\fR\ \fIparameter=value\fR\ [\fB\-\-UsedMetricParameters\fR\ \fIparameter=value\fR\ [...]]]
 [\fB\-\-TrialsParameters\fR\ \fIparameter=value\fR\ [\fB\-\-TrialsParameters\fR\ \fIparameter=value\fR\ [...]]]
 [\fB\-\-listParameters\fR]
 [\fB\-\-blockName\fR\ \fIname\fR]
 [\fB\-\-taskName\fR\ \fIname\fR]
 [\fB\-\-xmin\fR\ \fIval\fR]
 [\fB\-\-Xmax\fR\ \fIval\fR]
 [\fB\-\-ymin\fR\ \fIval\fR]
 [\fB\-\-Ymax\fR\ \fIval\fR]
 [\fB\-\-zusedXscale\fR\ \fIset\fR]
 [\fB\-\-ZusedYscale\fR\ \fIset\fR]
 [\fB\-\-additionalResDBfile\fR\ \fIfile\fR\ [\fB\-\-additionalResDBfile\fR\ \fIfile\fR\ [...]]]
 [\fB\-\-BlockAverage\fR]
 [\fB\-\-judgementThreshold\fR\ \fIscore\fR\ |\ \fB\-\-JudgementThresholdPerBlock\fR\ \fIsql_file\fR]
 [\fB\-\-KzSuppressMetricScores\fR]
 [\fB\-\-KdecisionThreshold\fR]
.Sp
Bypass step: 
 [\fB\-\-DETScoreSkip\fR]
.PP
The \s-1DEVA\s0 tool set uses the notion of a 'detection trial' as the
fundmental building block for the tool.  A detection trial is a test
probe of a detection system in which a system is given a particular
piece of data and the system provides a numeric estimate expressing
the confidence that the piece of data is a member of the target class.  A
trial can be a 'target trial' in which the piece of data \s-1IS\s0 an
instance of the class or a 'non\-target trial' in which the piece of
data \s-1IS\s0 \s-1NOT\s0 a member of the class.  The tool does not interact with
the source data in any manner so the probe data and class definition can be of
any construction.
.PP
The \s-1DEVA\s0 tool set has three design features that make it a powerful
evaluation tool:
.Sp
.RS 4
1. There are two modes of operation: simple and wizard mode.
.Sp
2. The tool set uses SQLite data bases to store the input data and \s-1SQL\s0
queries to condition the scoring based on supplied metadata.  See the
\&\s-1SQL\s0 \s-1FILTERS\s0 section to understand how to use \s-1SQL\s0 filters.
.Sp
3. Commandline-selectable evaluation metrics and parameters.  See the
\&\s-1METRICS\s0 section for how to select and provide parameters for the
metrics.
.RE
.PP
The two modes of operations make it possible for a casual user to use
the scoring tools quickly without understanding the intricacies of
the tool while providing richer functionality for the more advanced
user.  In simple mode, a user provides CSV-formatted system and
reference files and a simple \s-1SQL\s0 query, the tool then performs the
full scoring pipeline.  In wizard mode, a user re-uses previous
computations to speed execution by skipping steps that are often repetitive.
.PP
The SQLite provides both an efficient data store and a mechanism to
perform conditioned scoring by filtering the system output based on
additional factors.  The filter operation is performed by an \s-1SQL\s0 query
that selects both the target and non-target trials to score.  See the \s-1SQL\s0 \s-1FILTERS\s0 section below.
.PP
Commandline-selectable evaluation metrics permit the same tool to be
used for a variety of evaluations. The metrics are implemented as
source code modules provided with the tool set.  The metrics set can be
expanded only through additional coding.
.SH "INPUT FILES"
.IX Header "INPUT FILES"
.SS "\s-1CSV\s0 files"
.IX Subsection "CSV files"
To generate the multiple tables for the SQLite database, we rely on \fIComma Separated Values\fR (\s-1CSV\s0) to contain the data to be processed.
The \s-1CSV\s0 file names will be used as \s-1SQL\s0 table name, and must have as a first row the column headers that will be used as the \s-1SQL\s0 table column names.
To avoid issues in processing the data, it is recommended that each column content be quoted and comma separated. For example, a table whose \s-1SQL\s0 table name is expected to be \*(L"Employee\*(R" will be represented as the \*(L"Employee.csv\*(R" file and contain a first row: \*(L"\s-1ID\s0\*(R",\*(L"FirstName\*(R",\*(L"LastName\*(R" and an exemplar entry could be: \*(L"1\*(R",\*(L"John\*(R",\*(L"Doe\*(R"
.PP
The program leave the content of the database free for most \fImetadata\fR content. One of the table that is part of that database should contain a \fITrialID\fR column that match the one present in the \fIreference\fR or \fIsystem\fR \s-1CSV\s0.
.PP
The \fIreference\fR \s-1CSV\s0 file must contain two columns: \fITrialID\fR and \fITarg\fR, where \fITrialID\fR must be a primary key and \fITarg\fR values must be a either \fIy\fR or \fIn\fR.
.PP
The \fIsystem\fR \s-1CSV\s0 file must contain three columns: \fITrialID\fR, \fIScore\fR and \fIDecision\fR, where \fITrialID\fR must be a primary key, \fIScore\fR a numerical value and \fIDecision\fR values must be a either \fIy\fR or \fIn\fR.
.PP
Examples of \s-1CSV\s0 files can be found in the F4DE source in:
 \fIcommon/test/common/ref.csv\fR
 \fIcommon/test/common/sys.csv\fR
 \fIcommon/test/common/md.csv\fR
.PP
When possible (and detailed in the usage), an extended command line definition for \s-1CSV\s0 files can be specified and allow to define more details for the file' content:
.PP
[\fIcsvfile\fR[\fI:tablename\fR][\fI\f(CI%columnname:constraint\fI\fR[...]]
.PP
Here in addition to specify the \s-1CSV\s0 file name, the default \s-1SQL\s0 table name can be overridden by \fItablename\fR.
Also in the definition, SQLite \fIConstraints\fR can be applied to given columns within the table.
For example: expid.detection.csv:detection%Score:'\s-1CHECK\s0(Score>=0.0\ \s-1AND\s0\ Score\ <=1.0)'%EventID:UNIQUE
specifies that for the expid.detection.csv \s-1CSV\s0 file, force its SQLite table name to detection (the default would be have been to use expid_detection following the \fIentry remaining rule\fR defined in the next section) and will enforce that values within its Score column can only be added if they are between 0 and 1. Also, the table's EventID must be \fIunique\fR.
.SS "Configuration files"
.IX Subsection "Configuration files"
Configuration files are generated by Step 1.
.PP
A configuration file structure specify a corresponding \fISQLite\fR \s-1CREATE\s0\ \s-1TABLE\s0 but is human readable and composed of simple one line definitions:
.IP "newtable:\ tablename" 4
.IX Item "newtable:tablename"
Starts the definition of a new table and specify the table name as \fItablename\fR (must be the first line for each new table definition). Note that this step tries to infer the \fItablename\fR from the \fIcsvfile\fR's \fIfilename\fR.
.IP "csvfile:\ location" 4
.IX Item "csvfile:location"
Specify the full path \fIlocation\fR of the \s-1CSV\s0 file to load. If \fIlocation\fR is of the form path/filename.suffix, the default \-\-unless it is overridden by the user or for specific tables (such as \fIReference\fR and \fISystem\fR)\-\- is to use \fIfilename\fR as the \fItablename\fR.
.Sp
An \fIentry renaming rule\fR apply to all \fItablename\fR and \fIcolumnUsedName\fR so that any character other than a to z, A to Z, 0 to 9 and _ are replaced by _. In addition, if a \fIlocation\fR has multiple \fIsuffix\fR entries, only the last one if removed.
Therefore, f \fIlocation\fR if of the form filename.suffix1.suffix, the default corresponding \fItablename\fR would be filename_suffix1.
.Sp
Note that the \fIpath\fR is the exact same as specified on the command line for the corresponding \s-1CSV\s0 file (if the specified \s-1CSV\s0 file is ../test.csv, the \fIlocation\fR will be ../test.csv too) it is therefore important to run the tools from the same location when creating the configuration file and its database creation.
.IP "column:\ columnUsedName;columnType:columnConstraint" 4
.IX Item "column:columnUsedName;columnType:columnConstraint"
Specify a column seen in the \s-1CSV\s0 file, each column seen has to be detailed this way and the order in the configuration file as to match to column order in the \s-1CSV\s0 file. If a \s-1CSV\s0 file has \fIX\fR columns, the configuration file must have \fIX\fR column: definitions.
.Sp
column*: specify that the column is the table's primary key. A given table can only have one primary key.
.Sp
columnUsedName specify the column name as it can be accessed from its \fItablename\fR within \fISQLite\fR. If a column has a name to which the \fIentry renaming rule\fR applies, column: gets redefined as column:\ columnName=columnUsedName;columnType, where columnName is the original column name. For example if the original column name is
 name.has;to:fixed (of \fI\s-1TEXT\s0\fR columnType)
, the column: definition will read
 column:\ name.has;to:fixed=name_has_to_fixed;TEXT
.Sp
columnType is one of \s-1INT\s0, \s-1REAL\s0 or \s-1TEXT\s0.
.Sp
columnConstraint is optional and specify a SQLite constraint (\s-1CHECK\s0, \s-1UNIQUE\s0, ...).
Warning: \s-1PRIMARY\s0\ \s-1KEY\s0 should not be used as a column constraint, as it is defined using the column*: syntax.
.PP
Examples of configuration files can be found in the F4DE source in:
 \fIcommon/test/common/ref1.cfg\fR
 \fIcommon/test/common/sys2.cfg\fR
 \fIcommon/test/common/md2.cfg\fR
 \fIcommon/test/common/mix2.cfg\fR
.SH "SQL FILTERS"
.IX Header "SQL FILTERS"
Step 3 relies on a user provided SQLite \s-1INSERT\s0 command file, designed to fill a resultsTable table containing both a TrialID and a BlockID columns.
.PP
The filter file contains a SQLite set of commands. It is left to the user to create and store all temporary tables in the non permanent \fItemp\fR internal database (automatically deleted when the database connection is closed).
.PP
For this step, the reference database is loaded as \fIreferenceDB\fR and contains a table named \fIReference\fR, the system database is loaded as \fIsystemDB\fR and contains a table named \fISystem\fR.
If provided, the metadata database is loaded as \fImetadataDB\fR and contain the table list specified during the metadata configuration file.
.PP
If no \fIBlockID\fR is provided, a default value will be inserted in its stead.
.PP
An example of such select can be:
.PP
\&\s-1INSERT\s0\ \s-1OR\s0\ \s-1ABORT\s0\ \s-1INTO\s0\ ResultsTable\ (\ TrialID\ )
\&\ \ \s-1SELECT\s0\ System.TrialID\ \s-1FROM\s0\ System\ \s-1INNER\s0\ \s-1JOIN\s0\ Reference
\&\ \ \ \s-1WHERE\s0\ System.TrialID==Reference.TrialID;
.PP
which will \*(L"insert or abort the selected list of TrialID from the system table and the system table where both TrialID match\*(R". Note that this will use the default \fIBlockID\fR.
.PP
A more complex example given a \fIcolor\fR column in the metadata database that will be used as the \fIBlockID\fR:
.PP
\&\s-1INSERT\s0\ \s-1OR\s0\ \s-1ABORT\s0\ \s-1INTO\s0\ ResultsTable\ (\ TrialID,\ BlockID\ )
\&\ \ \s-1SELECT\s0\ system.TrialID,color\ \s-1FROM\s0\ system\ \s-1INNER\s0\ \s-1JOIN\s0\ md
\&\ \ \ \s-1WHERE\s0\ system.TrialID=md.TrialID\ \s-1AND\s0\ Decision>\*(L"1.2\*(R";
.PP
which will \*(L"insert or abort the selected list of TrialIDs and corresponding color from the system table and the metadata table where both TrialID match and the system's decision is more than 1.2\*(R". This will use the \fIcolor\fR entry as the \fIBlockID\fR.
.PP
Examples of \s-1SQL\s0 filter files can be found in the F4DE source in:
 \fIDEVA/test/common/filter1.sql\fR
 \fIDEVA/test/common/filter2.sql\fR
.SH "METRICS"
.IX Header "METRICS"
Please refer to the \fIEvaluation Scoring Primer\fR and \fIEvaluation webpage\fR for details on the \fIMetric\fR to be used (specified using \fB\-\-usedMetric\fR), as well as the parameters both for the Metric itself (specified using \fB\-\-UsedMetricParameters\fR) and the associated \fITrial\fR (specified using \fB\-\-TrialsParameters\fR).
.SH "PREREQUISITES"
.IX Header "PREREQUISITES"
\&\fBDEVA_cli\fR relies on some external software and files.
.IP "\fB\s-1SOFTWARE\s0\fR" 4
.IX Item "SOFTWARE"
\&\fIsqlite3\fR (http://www.sqlite.org/) is required (at least version 3.6.12) to perform all the \s-1SQL\s0 work.
.Sp
\&\fIgnuplot\fR (http://www.gnuplot.info/) is also required (at least version 4.2) to generate the DETCurve plots.
.IP "\fB\s-1GLOBAL\s0 \s-1ENVIRONMENT\s0 \s-1VARIABLE\s0\fR" 4
.IX Item "GLOBAL ENVIRONMENT VARIABLE"
Once you have installed the software, extending your \fB\s-1PATH\s0\fR environment variable to include F4DE's \fBbin\fR directory should be sufficient for the tools to find their components.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-AdditionalFilterDB\fR \fIfile:name\fR" 4
.IX Item "--AdditionalFilterDB file:name"
Attach additional SQLite database(s) during \fIFiltering Step\fR. Load \fIfile\fR as \fIname\fR (tables within can be accessed as \fIname\fR.\fItablename\fR).
.IP "\fB\-\-additionalResDBfile\fR \fIfile\fR" 4
.IX Item "--additionalResDBfile file"
Attach additional \fIFiltering Step\fR result SQLite database(s) during \fIDETCurve generation Step\fR. Tables will be merged by doing an \fB\s-1AND\s0\fR on the \fITrialID\fRs.
.IP "\fB\-\-BlockAverage\fR" 4
.IX Item "--BlockAverage"
For scoring step, combine all Trial in one \s-1DET\s0 instead of splitting them per BlockID
.IP "\fB\-\-blockName\fR \fIname\fR" 4
.IX Item "--blockName name"
Specify the name of the blocking factor.  The block name is the type of object that the system is detection, e.g., an event, speaker, etc.  The block name will be added to the reports and generated files.
.IP "\fB\-\-CreateDBSkip\fR" 4
.IX Item "--CreateDBSkip"
Skip the database and tables generation.
.Sp
This step uses the files created in the configuration generation step and generate multiple SQLite databases containing the tables specified in their respective configuration files.
.Sp
Files created during this step would be outdir/referenceDB.sql, outdir/systemDB.sql and outdir/metadataDB.sql
.IP "\fB\-\-configSkip\fR" 4
.IX Item "--configSkip"
Skip the generation of the configuration files required for the generation of the database tables.
.Sp
This process read each \s-1CSV\s0 file (\fIrefcsv\fR, \fIsyscsv\fR and metadata \fIcsvfile(s)\fR), determine the tables name, columns names and types and write them in outdir/referenceDB.cfg, outdir/systemDB.cfg and outdir/metadataDB.cfg files.
.IP "\fB\-\-DETScoreSkip\fR" 4
.IX Item "--DETScoreSkip"
Skip the Trial Scoring step (including DETCurve processing).
.Sp
This step rely on the outdir/referenceDB.sql, outdir/systemDB.sql and outdir/filterDB.sql files to extract into outdir/scoreDB.sql a \fIref\fR and \fIsys\fR table that only contains the \fITrialID\fRs left post-filtering.
This step also generate a few files starting with outdir/scoreDB.det that are the results of the DETCurve generation process.
.IP "\fB\-\-derivedSys\fR \fIjoin.sql\fR" 4
.IX Item "--derivedSys join.sql"
Derived system files are a mean to separate reporting requirement of systems within one or multiple files.
When using \fB\-\-derivedSys\fR a SQLite join command must be available that will \s-1INSERT\s0 the content in the \fISystem\fR table's \fITrialID\fR, \fIScore\fR and \fIDecision\fR.
.Sp
For example if the system reports both a \fIdecision\fR (with a \fITrialID\fR and \fIScore\fR columns) and \fIthreshold\fR (with an \fIEventID\fR and \fIxeshold\fR columns) tables, given a \fImetadata\fR database with a \fITrialIndex\fR with at least a \fITrialID\fR and \fIEventID\fR columns, the \fIjoin\fR file can contain:
.Sp
\&\s-1INSERT\s0\ \s-1OR\s0\ \s-1ABORT\s0\ \s-1INTO\s0\ System\ (\ TrialID,\ Score,\ Decision\ )
\&\ \ \s-1SELECT\s0\ detection.TrialID,\ Score,\ 'y'\ \s-1FROM\s0\ detection\ \s-1INNER\s0\ \s-1JOIN\s0\ TrialIndex,\ threshold
\&\ \ \ \s-1WHERE\s0\ (detection.TrialID\ ==\ TrialIndex.TrialID\ \s-1AND\s0\ TrialIndex.EventID==threshold.EventID
\&\ \ \ \ \ \ \ \ \ \ \s-1AND\s0\ Score\ >\ threshold.DetectionThreshold);
.Sp
\&\s-1INSERT\s0\ \s-1OR\s0\ \s-1ABORT\s0\ \s-1INTO\s0\ System\ (\ TrialID,\ Score,\ Decision\ )
\&\ \ \s-1SELECT\s0\ detection.TrialID,\ Score,\ 'n'\ \s-1FROM\s0\ detection\ \s-1INNER\s0\ \s-1JOIN\s0\ TrialIndex,\ threshold
\&\ \ \ \s-1WHERE\s0\ (detection.TrialID\ ==\ TrialIndex.TrialID\ \s-1AND\s0\ TrialIndex.EventID==threshold.EventID
\&\ \ \ \ \ \ \ \ \ \ \s-1AND\s0\ Score\ <=\ threshold.DetectionThreshold);
.IP "\fB\-\-FilterCMDfile\fR \fISQLite_commands_file\fR" 4
.IX Item "--FilterCMDfile SQLite_commands_file"
Specify the location of the \s-1SQL\s0 commands file used to extract the list of \fITrialID\fR that will be inserted in \fIoutput/filterDB.sql\fR.
.IP "\fB\-\-filterSkip\fR" 4
.IX Item "--filterSkip"
Skip step that uses the \s-1SQL\s0 \fI\s-1SELECT\s0\fRs commands specified in the \fB\-\-FilterCMDfile\fR step to create the outdir/filterDB.sql database (which only contains TrialID information).
.IP "\fB\-\-GetTrialsDB\fR" 4
.IX Item "--GetTrialsDB"
Add a table to the scoring database containing each individual Trial component.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Display the usage page for this program. Also display some default values and information.
.IP "\fB\-\-iFilterDBfile\fR \fIfile\fR" 4
.IX Item "--iFilterDBfile file"
Specify the filtering SQLite database file
.IP "\fB\-\-JudgementThresholdPerBlock\fR \fIsql_file\fR" 4
.IX Item "--JudgementThresholdPerBlock sql_file"
During \s-1DET\s0 Curve generation, when adding a Trial, do not use the System's Decision but base the decision on a given threshold per BlockID. This option specifies the \s-1SQL\s0 command file expected to insert into the ThresholdTable table (with two columns: BlockID Threshold) a Threshold per BlockID.
.IP "\fB\-\-judgementThreshold\fR \fIscore\fR" 4
.IX Item "--judgementThreshold score"
During \s-1DET\s0 Curve generation, when adding a Trial, do not use the System's Decision but base the decision on this given threshold \fIscore\fR
.IP "\fB\-\-KsaveProfile\fR" 4
.IX Item "--KsaveProfile"
This option will save in the local directory a \fIprofile\fR definition file with contains selected command line options (excluding \s-1CSV\s0 files) that can be used by the \fB\-\-profile\fR option.
.IP "\fB\-\-KexactlyXderivedSys\fR \fInumber\fR" 4
.IX Item "--KexactlyXderivedSys number"
Specify the exact number of \fIderivedSys\fR \s-1CSV\s0 files that must be provided on the command line.
.IP "\fB\-\-KqSys\fR \fIfile\fR" 4
.IX Item "--KqSys file"
Specify the perl array memory dump file that contains regular expression matching rules for columms seen in the system definition configuration file. Non conformance to the rules within the file will cause the program to exit in error.
.Sp
The array order is as follow:
 #0: global error message for 
 #1: \s-1REGEXP\s0 rule
 #2: Error message to print if regexp can not be matched
 Each following column are repeat of #1 and #2.
.Sp
This option only work for non \fIderivedSys\fR \s-1CSV\s0 files.
.IP "\fB\-\-KwSys\fR \fIfile\fR" 4
.IX Item "--KwSys file"
Specify the perl array memory dump file that contains regular expression matching rules for columms seen in the system definition configuration file. Non conformance to the rules within the file will cause the program to print an warning message but will not cause the global program to quit in error.
.Sp
Columns definitions within the file follow the rules set for \fB\-\-KqSys\fR.
.Sp
This option only work for non \fIderivedSys\fR \s-1CSV\s0 files.
.IP "\fB\-\-KQderivedSys\fR \fIfile\fR" 4
.IX Item "--KQderivedSys file"
Specify the perl array memory dump file that contains regular expression matching rules for columms seen in derived system definition configuration file. Non conformance to the rules within the file will cause the program exit in error.
.Sp
Columns definitions within the file follow the rules set for \fB\-\-KqSys\fR.
.Sp
This option only work for \fIderivedSys\fR \s-1CSV\s0 files.
.IP "\fB\-\-KWderivedSys\fR \fIfile\fR" 4
.IX Item "--KWderivedSys file"
Specify the perl array memory dump file that contains regular expression matching rules for columms seen in derived system definition configuration file. Non conformance to the rules within the file will cause the program to print an warning message but will not cause the global program to quit in error.
.Sp
Columns definitions within the file follow the rules set for \fB\-\-KqSys\fR.
.Sp
This option only work for \fIderivedSys\fR \s-1CSV\s0 files.
.IP "\fB\-\-KSysConstraints\fR \fIfile\fR" 4
.IX Item "--KSysConstraints file"
Specify the perl hash memory dump file that contains a column to constraint list for columms seen in the system configuation file
If a column specified in the file can not be found, the program will exit in error.
.Sp
The hash order is as follow:
 key   = column name
 value = valid SQLite constraint to apply to the specified column.
.Sp
\&\s-1WARNING:\s0 There can be only one \fI\s-1PRIMARY\s0 \s-1KEY\s0\fR per table, and this column is automatically selected for \s-1REF\s0 and \s-1SYS\s0, and is an autoincremental integer for all others. If you want to insure that all data are unique in a column, use a '\s-1UNIQUE\s0' constraint.
.IP "\fB\-\-KMDConstraints\fR \fIfile\fR" 4
.IX Item "--KMDConstraints file"
Specify the perl hash memory dump file that contains a column to constraint list for columms seen in the metadata configuation file
If a column specified in the file can not be found, the program will exit in error.
.Sp
File rules definition follow the specificities detailed in \fB\-\-KSysConstraints\fR.
.IP "\fB\-\-KjUseRankForScores\fR" 4
.IX Item "--KjUseRankForScores"
Use the ranks supplied in the .detection.csv file rather than the detection scores for computing the \s-1DET\s0 curves.
.IP "\fB\-\-KzSuppressMetricScores\fR" 4
.IX Item "--KzSuppressMetricScores"
Do not report the scores for the specified 'metric'.  The Global metrics will still be produced.
.IP "\fB\-\-KdecisionThreshold\fR" 4
.IX Item "--KdecisionThreshold"
When adding a Trial, do not use the System\e's Decision but base the decision on a given threshold.
.IP "\fB\-\-listParameters\fR" 4
.IX Item "--listParameters"
List Metric and Trial package authorized parameters
.IP "\fB\-\-MetadataDBfile\fR \fIfile\fR" 4
.IX Item "--MetadataDBfile file"
Specify the location of the Metadata database file to use/generate.
.IP "\fB\-\-man\fR" 4
.IX Item "--man"
Display this man page.
.IP "\fB\-\-NULLfields\fR" 4
.IX Item "--NULLfields"
Empty columns will be inserted as the \s-1NULL\s0 value to allow proper \s-1JOIN\s0 (the default is to insert them as the empty value of the defined type, ie '' for TEXTs). This behavior only apply to metadata \s-1CSV\s0 files.
.IP "\fB\-\-outdir\fR \fIdir\fR" 4
.IX Item "--outdir dir"
Specify the directory in which all files relevant to this call to \fBDEVA_cli\fR will be placed (or looked for).
.IP "\fB\-\-PrintedBlock\fR \fItext\fR" 4
.IX Item "--PrintedBlock text"
During Step 3 (filtering), specify the \fBBlockID\fR value used if the column is not provided during the \fI\s-1SELECT\s0\fR step
.IP "\fB\-\-profile\fR \fIname\fR" 4
.IX Item "--profile name"
Using a profile enable to used pre-configured values for options, such as \fB\-\-usedMetric\fR, \fB\-\-UsedMetricParameters\fR, \fB\-\-TrialsParameters\fR, \fB\-\-taskName\fR, \fB\-\-blockName\fR, \fB\-\-PrintedBlock\fR, \fB\-\-derivedSys\fR, as well as confirm that some options are used, such as \fB\-\-derivedSys\fR (and enforce only a certain number of system files are provided). Profiles also can specify more complex rules such as configuration type checks and constraints
.IP "\fB\-\-quickConfig\fR [\fIlinecount\fR]" 4
.IX Item "--quickConfig [linecount]"
Specify the number of lines to be read in Step 1 to decide on file content for config helper step (without quickConfig, process all lines)
.IP "\fB\-\-RefDBfile\fR \fIfile\fR" 4
.IX Item "--RefDBfile file"
Specify the location of the Reference database file to use/generate.
.IP "\fB\-\-refcsv\fR \fIcsvfile\fR" 4
.IX Item "--refcsv csvfile"
Specify the location of the Reference \s-1CSV\s0 file (expected to contain a TrialID and Targ columns).
.IP "\fB\-\-SysDBfile\fR \fIfile\fR" 4
.IX Item "--SysDBfile file"
Specify the location of the System database file to use/generate.
.IP "\fB\-\-syscsv\fR \fIcsvfile\fR" 4
.IX Item "--syscsv csvfile"
Specify the location of the System \s-1CSV\s0 file (expected to contain TrialID, Score and Decision columns).
.IP "\fB\-\-TrialsParameters\fR \fIparameter=value\fR" 4
.IX Item "--TrialsParameters parameter=value"
Specify the parameters given during the Trial creation process.
.IP "\fB\-\-taskName\fR \fIname\fR" 4
.IX Item "--taskName name"
Specify the name of the task (the type of evaluation, for example: detection).
.IP "\fB\-\-UsedMetricParameters\fR \fIparameter=value\fR" 4
.IX Item "--UsedMetricParameters parameter=value"
Specify the parameters given during the Metric creation process.
.IP "\fB\-\-usedMetric\fR \fIpackage\fR" 4
.IX Item "--usedMetric package"
Specify the Metric package to use for scoring data (must be in your perl search path \*(-- or part of F4DE).
.IP "\fB\-\-VMDcfg\fR \fIfile\fR" 4
.IX Item "--VMDcfg file"
Specify the metadata configuration file
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Display the \fBDEVA_cli\fR version information.
.IP "\fB\-\-WSYScfg\fR \fIfile\fR" 4
.IX Item "--WSYScfg file"
Specify the System configuration file
.IP "\fB\-\-wREFcfg\fR \fIfile\fR" 4
.IX Item "--wREFcfg file"
Specify the Reference configuration file
.IP "\fB\-\-Xmax\fR \fIval\fR" 4
.IX Item "--Xmax val"
Specify the max value of the X axis (\s-1PFA\s0) of the \s-1DET\s0 curve
.IP "\fB\-\-xmin\fR \fIval\fR" 4
.IX Item "--xmin val"
Specify the min value of the X axis (\s-1PFA\s0) of the \s-1DET\s0 curve
.IP "\fB\-\-Ymax\fR \fIval\fR" 4
.IX Item "--Ymax val"
Specify the max value of the Y axis (PMisss) of the \s-1DET\s0 curve
.IP "\fB\-\-ymin\fR \fIval\fR" 4
.IX Item "--ymin val"
Specify the min value of the Y axis (PMisss) of the \s-1DET\s0 curve
.IP "\fB\-\-ZusedYscale\fR \fIset\fR" 4
.IX Item "--ZusedYscale set"
Specify the scale used for the Y axis of the \s-1DET\s0 curve
.IP "\fB\-\-zusedXscale\fR \fIset\fR" 4
.IX Item "--zusedXscale set"
Specify the scale used for the X axis of the \s-1DET\s0 curve
.SH "USAGE"
.IX Header "USAGE"
\&\fBDEVA_cli \-\-outdir outdir \-\-refcsv ref.csv \-\-syscsv sys.csv md.csv \-\-FilterCMDfile filter1.sql \-\-usedMetric MetricNormLinearCostFunct \-\-UsedMetricParameters 'Ptarg=0.1'  \-\-UsedMetricParameters 'CostMiss=1' \-\-UsedMetricParameters 'CostFA=1'\fR
.PP
This will process the four steps expected of the command line interface:
.IP "Step 1 (uses \fBSQLite_cfg_helper\fR)" 4
.IX Item "Step 1 (uses SQLite_cfg_helper)"
Will use \fIref.csv\fR as the Reference \s-1CSV\s0 file, \fIsys.csv\fR as the System \s-1CSV\s0 file and \fImd.csv\fR as the one Metadata \s-1CSV\s0 file (multiple Metadata \s-1CSV\s0 can be used, we only use one in this example).
.Sp
From those files, the first step will generate the database creation configuration files by loading each rows and columns in the \s-1CSV\s0 to determine their SQLite type, and determine if the column header name has to be adapted to avoid characters not recognized by SQLite.
.Sp
As a reminder, to be proper, the \fIref.csv\fR must contain a \fITrialID\fR and \fITarg\fR columns.
The \fIsys.csv\fR must contain a \fITrialID\fR, \fIScore\fR and \fIDecision\fR columns.
.Sp
The metadata \s-1CSV\s0(s) should contain the information that should be important to be \fI\s-1SELECT\s0\fRed during the \fIfiltering\fR step (3rd step of this process) as well as at least one table with a \fITrialID\fR and optionally a \fIBlockID\fR column , both of which are expected during the \fIfiltering\fR step (if \fIBlockID\fR is not provided, a default value will be used).
.Sp
Please note that it is the user's responsibility to provide properly formatted \s-1CSV\s0 files with the expected columns (especially for the Reference and System \s-1CSV\s0 files).
.Sp
This process will create the \fIoutdir/referenceDB.cfg\fR, \fIoutdir/systemDB.cfg\fR and \fIoutdir/metadataDB.cfg\fR files. Note that the location of the \s-1CSV\s0 files is embedded within the config file.
.Sp
This step also create \fIoutdir/metadataDB_columninfo.txt\fR and \fIoutdir/metadataDB_tableinfo.txt\fR, which contain details on the relationship between columns and tables that will compose the metadata database.
.IP "Step 2 (uses \fBSQLite_tables_creator\fR)" 4
.IX Item "Step 2 (uses SQLite_tables_creator)"
The next step will use those configuration files to create SQLite database files containing:
.RS 4
.IP "\(bu" 4
One table called \fIReference\fR (containing at least one primary key column called \fITrialID\fR and one column called \fITarg\fR with y or n value) for \fIoutdir/referenceDB.db\fR which content is loaded from \fIref.csv\fR.
.IP "\(bu" 4
One table called \fISystem\fR (containing at least on primary key column called \fITrialID\fR as well as one \fIScore\fR column with numerical value and one \fIDecision\fR with y or n value) for \fIoutdir/systemDB.db\fR which content is loaded from \fIsys.csv\fR
.IP "\(bu" 4
As many tables as metadata \s-1CSV\s0 files (here only one) are added to <outdir/metadataDB.db> loaded from the metadata \s-1CSV\s0 file list provided (here only \fImd.csv\fR).
.RE
.RS 4
.RE
.IP "Step 3 (uses \fBDEVA_filter\fR)" 4
.IX Item "Step 3 (uses DEVA_filter)"
The next step will use the \fIfilter1.sql\fR \s-1SQL\s0 command lines file to apply the given filter. For this step \fIoutdir/referenceDB.db\fR is loaded as \fIreferenceDB\fR (and contains a table named \fIReference\fR). \fIoutdir/systemDB.db\fR is loaded as \fIsystemDB\fR (and contains a table named \fISystem\fR). And \fIoutdir/metadataDB.db\fR is loaded as \fImetadataDB\fR and contain the table list specified in \fIoutdir/metadataDB.cfg\fR.
The filter file contains a SQLite set of commands. It is left to the user to create and store all temporary tables in the non permanent \fItemp\fR internal database (automatically deleted when the database connection is closed).
Users should not output anything but the final select that must contain only the following data in the expected order: \fITrialID\fR and \fIBlockID\fR.
If no \fIBlockID\fR is provided, a default value will be inserted in its stead.
Both columns will then be made to populate \fIoutdir/filterDB.db\fR's \fIresultsTable\fR table.
.IP "Step 4 (uses \fBDEVA_sci\fR)" 4
.IX Item "Step 4 (uses DEVA_sci)"
The final step will use \fIoutdir/referenceDB.db\fR, \fIoutdir/systemDB.db\fR and \fIoutdir/filterDB.db\fR to select from the \fIReference\fR and \fISystem\fR tables only the \fITrialID\fRs present in \fIresultsTables\fR and create the \fIoutdir/scoreDB.db\fR SQLite database file a \fIReference\fR and \fISystem\fR tables that only contain the rows  matching the given \fITrialID\fRs.
.Sp
\&\fITrials\fR are then generated, using the \fIBlockID\fR column from \fIresultsTable\fR as the \fITrial\fR's block information, so that:
.RS 4
.IP "\(bu" 4
If a given entry is both in \fIReference\fR and \fISystem\fR it is \fImapped\fR (the \fISystem\fR's \fIScore\fR and \fIDecision\fR columns as well as the \fIReference\fR's \fITarg\fR column are used to specify the \fITrial\fR's \fIsysScore\fR, \fIdecision\fR and \fIisTarg\fR information).
.IP "\(bu" 4
If an entry is only in <System>, it is an \fIunmapped_sys\fR entry (the \fISystem\fR's \fIScore\fR and \fIDecision\fR columns specify the \fITrial\fR's \fIsysScore\fR and \fIdecision\fR information, \fIisTarg\fR is always 0 in this case).
.IP "\(bu" 4
If an entry is only in \fIReference\fR it is an \fIunmapped_ref\fR entry, but only \fIy\fRes \fITarg\fR entries are added as \fI\s-1OMMITTED\s0\fR \fITrial\fR.
.RE
.RS 4
.Sp
\&\fIDETCurve\fRs are then generated using the \fITrials\fR using the \fIMetricNormLinearCostFunct\fR specified \fIMetric\fR (and the specified \fIUsedMetricParameters\fR) 
Each file starting with \fIoutdir/scoreDB.scores\fR is one of those results:
.IP "\(bu" 4
\&\fIoutdir/scoreDB.scores.txt\fR
contains the \fIDETCurve\fR's \fIPerformance Summary Over and Ensemble of Subsets\fR
.IP "\(bu" 4
\&\fIoutdir/scoreDB.scores.csv\fR
is a Comma Separated Value dump of the previous data's table.
.IP "\(bu" 4
Files starting with \fIoutdir/scoreDB.det\fR are used by and for the graphic representation of the curve points:
.IP "\(bu" 4
files with a \fI.dat.X\fR suffix (where \fIX\fR is a numerical value) are gnuplot data files.
.IP "\(bu" 4
files with a \fI.plt\fR suffix are gnuplot command files
.IP "\(bu" 4
files with a \fI.png\fR suffix are \fIPortable Network Graphics\fR image files results from the corresponding \fI.plt\fR gnuplot commands files
.IP "\(bu" 4
files with a \fI.srl\fR (or \fI.srl.gz\fR) suffix are \fIserialized\fR \fIDETCurve\fR files and can be used as input to tools such as DETUtil to merge multiple curves together
.RE
.RS 4
.RE
.SH "Notes"
.IX Header "Notes"
.IP "Logdirs" 4
.IX Item "Logdirs"
A \fIoutdir/_logs\fR is created and populated by each step, so that files starting with \fICfgGen_\fR and \fIDBgen_\fR are generated respectively during Step 1 and 2, \fIfilterDB.log\fR during Step 3 and \fIscoreDB.log\fR during Step 4.
.Sp
In case a file of the expected name is already present, a tag consisting of \-YYYYMMDD\-HHMMSS (year, month, day, hour, minute, seconds) will be added to the newly created log file.
.IP "Step(s) bypass" 4
.IX Item "Step(s) bypass"
It is possible to \fIbypass\fR entirely some steps. For example:
.RS 4
.IP "\(bu" 4
\&\fBDEVA_cli \-\-outdir outdir \-\-refcsv ref.csv \-\-syscsv sys.csv md.csv \-\-CreateDBSkip \-\-filterSkip \-\-DETScoreSkip\fR
.Sp
Will only create the configuration files, but not the database, or run the filter or scorer. This is useful if one wants to edit the \fIoutdir/metadataDB.cfg\fR file to rename some columns or look at the automatic renaming of some metadata table (adapted from the file name) or columns names (to avoid SQLite unauthorized characters) in order to adapt the filter step.
.Sp
Note that since the location of the \s-1CSV\s0 files is embedded within the config files, one can not do the following after running the previous command:
.IP "\(bu" 4
\&\fBDEVA_cli \-\-outdir outdir \-\-refcsv ref2.csv \-\-syscsv sys2.csv md2.csv \-\-configSkip \-\-filterSkip \-\-DETScoreSkip\fR
.Sp
\&\fIref2.csv\fR, \fIsys2.csv\fR and \fImd2.csv\fR will not be used by the database creation process (Step 2), since \fIref.csv\fR, \fIsys.csv\fR and \fImd.csv\fR are specified in the csvfile: line of the respective config file.
.RE
.RS 4
.RE
.SH "RELATED TOOLS"
.IX Header "RELATED TOOLS"
The script will work with the following tools (lookup their help page for more details):
.IP "\fBSQLite_cfg_helper\fR" 4
.IX Item "SQLite_cfg_helper"
.PD 0
.IP "\fBSQLite_tables_creator\fR (and \fBSQLite_load_csv\fR)" 4
.IX Item "SQLite_tables_creator (and SQLite_load_csv)"
.IP "\fBDEVA_filter\fR" 4
.IX Item "DEVA_filter"
.IP "\fBDEVA_sci\fR (and \fBDETUtil\fR)" 4
.IX Item "DEVA_sci (and DETUtil)"
.PD
.SH "GNUPLOT FONT NOTE"
.IX Header "GNUPLOT FONT NOTE"
It is posible that during \s-1DET\s0 curve generations, there is a warning message from gnuplot (check the \fIoutdir\fR/_logs/scoreDB.log file) and plots font might look unscaled to the picture size, this is likely due to gnuplot being unable to find expected fonts (such as Arial.ttf).
If this happens, it is recommended to extend one's \s-1GDFONTPATH\s0 with the location on your system of needed fonts.
.SH "NFS NOTE"
.IX Header "NFS NOTE"
When running DEVA_cli on an \s-1NFS\s0 located database file (some files generated in the \-\-outdir for example), performance loss might happen, this is due to the \fIjournal\fR file for SQLite that is stored to the same directory as the original database file and write all the data to be committed to the main database when a SQLite transaction is complete. For optimal speed, it is recommended to try to avoid using \s-1NFS\s0 located database file in favor a copy on the local disk.
.SH "BUGS"
.IX Header "BUGS"
Please send bug reports to <nist_f4de@nist.gov>
.SH "AUTHORS"
.IX Header "AUTHORS"
Martial Michel <martial.michel@nist.gov>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This software was developed at the National Institute of Standards and Technology by employees of the Federal Government in the course of their official duties.  Pursuant to Title 17 Section 105 of the United States Code this software is not subject to copyright protection within the United States and is in the public domain. It is an experimental system.  \s-1NIST\s0 assumes no responsibility whatsoever for its use by any party.
.PP
\&\s-1THIS\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1PROVIDED\s0 \*(L"\s-1AS\s0 \s-1IS\s0.\*(R"  With regard to this software, \s-1NIST\s0 \s-1MAKES\s0 \s-1NO\s0 \s-1EXPRESS\s0 \s-1OR\s0 \s-1IMPLIED\s0 \s-1WARRANTY\s0 \s-1AS\s0 \s-1TO\s0 \s-1ANY\s0 \s-1MATTER\s0 \s-1WHATSOEVER\s0, \s-1INCLUDING\s0 \s-1MERCHANTABILITY\s0, \s-1OR\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0.
